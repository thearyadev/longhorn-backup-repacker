name: aur
on:
  release:
    types: [published]
jobs:
  aur-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Clone AUR PKGBUILD Repo
        run: "git clone https://aur.archlinux.org/longhorn-backup-repacker.git lbr"

      - name: Generate pkgrel
        working-directory: ./lbr
        run: echo "PKGREL=$(cat PKGBUILD | grep pkgrel | awk -F= '{print $2 + 1}')" >> $GITHUB_ENV

      - name: Generate PKGBUILD
        run: |
          cat > PKGBUILD <<EOF
          # Maintainer: Aryan Kothari aryan@aryankothari.dev
          pkgname=longhorn-backup-repacker
          pkgver=${GITHUB_REF#refs/tags/}
          pkgrel=${PKGREL}
          pkgdesc="A tool to repack Longhorn backup files"
          arch=('any')
          url="https://github.com/thearyadev/longhorn-backup-repacker"
          license=('MIT')
          depends=('go')
          makedepends=('git')
          _commit=${{ github.head_ref }}.${{ github.sha }}

          source=("\$pkgname-\$pkgver.tar.gz::https://github.com/thearyadev/\$pkgname/archive/\$pkgver.tar.gz")
          sha256sums=('SKIP')

          build() {
              cd "\$pkgname-\${pkgver#v}"
              export CGO_CPPFLAGS="${CPPFLAGS}"
              export CGO_CFLAGS="${CFLAGS}"
              export CGO_CXXFLAGS="${CXXFLAGS}"
              export CGO_LDFLAGS="${LDFLAGS}"
              export GOFLAGS="-buildmode=pie -trimpath -ldflags=-linkmode=external -mod=readonly -modcacherw"
              go build -ldflags="-X main.version=\${pkgver#v} -X main.commit=\$_commit" -o "\$pkgname" .
          }

          package() {
              cd "\$pkgname-\${pkgver#v}"
              sudo install -Dm755 "\$pkgname" "/usr/bin/\$pkgname"
              sudo install -Dm644 LICENSE "/usr/share/licenses/\$pkgname/LICENSE"
          }
          EOF


      - name: Publish AUR package
        uses: KSXGitHub/github-actions-deploy-aur@v4.1.1
        with:
          pkgname: longhorn-backup-repacker
          pkgbuild: ./PKGBUILD
          commit_username: ${{ secrets.AUR_USERNAME }}
          commit_email: ${{ secrets.AUR_EMAIL }}
          ssh_private_key: ${{ secrets.AUR_SSH_PRIVATE_KEY }}
          commit_message: Update AUR package
          ssh_keyscan_types: rsa,ecdsa,ed25519
